// src/app/admin/personnel/create/page.tsx
'use client'

import { useState } from 'react'
import { useRouter } from 'next/navigation'
import { createClient } from '../../../../../utils/supabase/client'
import Link from 'next/link'

export default function CreatePersonnelPage() {
  const [name, setName] = useState('')
  const [position, setPosition] = useState('')
  const [bio, setBio] = useState('')
  const [imageUrl, setImageUrl] = useState('')
  const [isActive, setIsActive] = useState(true)
  const [role, setRole] = useState('MP')
  const [campus, setCampus] = useState('Rangsit')

  const [loading, setLoading] = useState(false)
  const [message, setMessage] = useState('')
  const router = useRouter()

  const handleSubmit = async (event: React.FormEvent) => {
    event.preventDefault()
    setLoading(true)
    setMessage('')

    // üëá 1. ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏£‡∏£‡∏Å‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á
    // ‡∏ñ‡πâ‡∏≤ position ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á (‡∏´‡∏•‡∏±‡∏á‡∏ï‡∏±‡∏î‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß) ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ '-' ‡πÅ‡∏ó‡∏ô
    const finalPosition = position.trim() === '' ? '-' : position;

    const supabase = createClient()
    const { error } = await supabase
      .from('personnel')
      .insert([
        {
          name,
          position: finalPosition, // üëà 2. ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß
          bio,
          image_url: imageUrl || null,
          is_active: isActive,
          role,
          campus,
        },
      ])

    if (error) {
      setMessage(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error.message}`)
    } else {
      setMessage('‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏∏‡∏Ñ‡∏•‡∏≤‡∏Å‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!')
      router.push('/admin/personnel')
      router.refresh()
    }
    setLoading(false)
  }

  return (
    <div className="d-flex flex-column min-vh-100 bg-light">
      <main className="container flex-grow-1 py-4">
        <h1 className="mb-4">‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏∏‡∏Ñ‡∏•‡∏≤‡∏Å‡∏£‡πÉ‡∏´‡∏°‡πà</h1>
        <div className="card shadow-sm p-4">
          <form onSubmit={handleSubmit}>
            <div className="mb-3">
              <label htmlFor="name" className="form-label">‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</label>
              <input type="text" className="form-control" id="name" value={name} onChange={(e) => setName(e.target.value)} required />
            </div>
            <div className="mb-3">
              <label htmlFor="position" className="form-label">‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏ô‡∏û‡∏£‡∏£‡∏Ñ</label>
              <input type="text" className="form-control" id="position" value={position} onChange={(e) => setPosition(e.target.value)} placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏û‡∏£‡∏£‡∏Ñ (‡∏ñ‡πâ‡∏≤‡∏ß‡πà‡∏≤‡∏á‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô -)" />
            </div>

            <div className="row">
              <div className="col-md-6 mb-3">
                <label htmlFor="role" className="form-label">‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó</label>
                <select id="role" className="form-select" value={role} onChange={(e) => setRole(e.target.value)}>
                  <option value="MP">‡∏™.‡∏™.</option>
                  <option value="Executive">‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£</option>
                  <option value="Both">‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á</option>
                </select>
              </div>
              <div className="col-md-6 mb-3">
                <label htmlFor="campus" className="form-label">‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î‡∏®‡∏π‡∏ô‡∏¢‡πå</label>
                <select id="campus" className="form-select" value={campus} onChange={(e) => setCampus(e.target.value)}>
                  <option value="Rangsit">‡∏£‡∏±‡∏á‡∏™‡∏¥‡∏ï</option>
                  <option value="Tha Prachan">‡∏ó‡πà‡∏≤‡∏û‡∏£‡∏∞‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå</option>
                  <option value="Lampang">‡∏•‡∏≥‡∏õ‡∏≤‡∏á</option>
                </select>
              </div>
            </div>

            <div className="mb-3">
              <label htmlFor="bio" className="form-label">‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÇ‡∏î‡∏¢‡∏¢‡πà‡∏≠</label>
              <textarea className="form-control" id="bio" rows={4} value={bio} onChange={(e) => setBio(e.target.value)}></textarea>
            </div>
            <div className="mb-3">
              <label htmlFor="imageUrl" className="form-label">URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</label>
              <input type="url" className="form-control" id="imageUrl" value={imageUrl} onChange={(e) => setImageUrl(e.target.value)} />
            </div>
            <div className="form-check mb-3">
              <input 
                className="form-check-input" 
                type="checkbox" 
                id="isActive" 
                checked={isActive} 
                onChange={(e) => setIsActive(e.target.checked)}
              />
              <label className="form-check-label" htmlFor="isActive">
                ‡∏î‡∏≥‡∏£‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á (Active)
              </label>
            </div>
            <button type="submit" className="btn btn-primary me-2" disabled={loading}>
              {loading ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...' : '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'}
            </button>
            <Link href="/admin/personnel" className="btn btn-secondary">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</Link>
          </form>
          {message && <div className={`alert mt-3 ${message.includes('‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à') ? 'alert-success' : 'alert-danger'}`}>{message}</div>}
        </div>
      </main>
    </div>
  )
}
